---
import fetchApi from '../lib/payload';
import type NotFound from '../interfaces/notFound';
import Layout from '../layouts/Layout.astro';
import RichText from '../components/RichText';
import type RichTextNode from '../interfaces/RichText';
import BlogHighlights from '../components/BlogHighlights.astro';

import { getLangFromUrl } from '../i18n/utils';
const lang = getLangFromUrl(Astro.url);

const notFoundEn = await fetchApi<NotFound>({
  endpoint: 'notFound',
  global: true,
  lang: 'en'
});

const notFoundFi = await fetchApi<NotFound>({
  endpoint: 'notFound',
  global: true,
  lang: 'fi'
});

let notFound = notFoundEn;

if (lang === 'fi') {
  notFound = notFoundFi;
}

const nodes = (notFound.content) ? notFound.content.root.children as RichTextNode[] : null;
---

<Layout title={ notFound.title } locale={ lang }
  currentType="front" currentUrl="front" fiUrl="front" engUrl="front" alternateFi="fi" alternateEn="en"
>
  <div class="max-w-[1564px] mx-auto md:px-8-px">
    <div class="text-lt-gray dark:text-dk-gray py-2 px-4-px max-w-xl mx-auto md:py-6 md:px-8-px lg:max-w-4xl">
      <h1 id="skip-target">{ notFound.title }</h1>
      <div class="text-xl bodytext">
        { nodes &&
          <RichText client:load nodes={nodes} lang={lang} />
        }
      </div>
    </div>
  </div>
  { (lang === "en") ?
  <BlogHighlights slot="blogs" />
  : null }
</Layout>