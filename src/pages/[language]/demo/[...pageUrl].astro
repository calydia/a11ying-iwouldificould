---
import fetchApi from '../../../lib/payload';
import type Page from '../../../interfaces/page';
import RichText from '../../../components/RichText';
import type RichTextNode from '../../../interfaces/RichText';
import { useTranslations } from '../../../i18n/utils';

import Layout from '../../../layouts/Layout.astro';

export async function getStaticPaths() {
  const pages = await fetchApi<Page[]>({
    endpoint: 'demopages',
    global: false,
    wrappedByKey: 'docs',
  });

  const languages = ['en', 'fi'] as const;

  return pages.flatMap((page: Page) =>
    languages.map((lang) => ({
      params: {
        language: lang,
        pageUrl:  page.pageUrl[lang],
      },
      props: {
        ...page,
        lang,
      },
    }))
  );
}

type LangKey = 'en' | 'fi';
interface Props extends Page {
  lang: LangKey;
}
const { lang, ...page } = Astro.props as Props;

const t = useTranslations(lang);

const nodes = (page.content[lang]) ? page.content[lang].root.children as RichTextNode[] : null;
---
<Layout title={ page.title[lang] } locale={ lang } metaDescription={ page.metaDescription[lang] }
  currentType="page" currentUrl={ page.pageUrl[lang] } 
  fiUrl={ page.pageUrl['fi'] ? page.pageUrl['fi'] : null } engUrl={ page.pageUrl['en'] ? page.pageUrl['en'] : null }
  alternateFi="fi" alternateEn="en" type="demo" currentSlug={ page.slug[lang] }
>
  <div class="max-w-[1564px] mx-auto md:px-8-px">
    <div class="text-lt-gray dark:text-dk-gray py-2 px-4-px max-w-xl mx-auto md:py-6 md:px-8-px lg:max-w-4xl">
      <h1 id="skip-target">{ page.title[lang] }</h1>
      {nodes &&        
        <div class="text-xl bodytext"><RichText client:load nodes={nodes} lang={lang} /></div>
      }
    </div>
  </div>
</Layout>